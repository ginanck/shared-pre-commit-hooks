---
default_stages: [pre-commit, manual]
default_install_hook_types: [pre-commit, pre-push, commit-msg, prepare-commit-msg]

repos:
  # Auto-download latest linter configurations before running any checks
  - repo: local
    hooks:
      - id: auto-linter-config-update
        name: auto-linter-config-update
        description: Automatically downloads the latest linter configuration files from the shared repository before running any checks. This ensures all linters use the most up-to-date rules and settings.
        entry: bash
        language: system
        args: [
          "-c", 
          "curl -fsSL https://raw.githubusercontent.com/ginanck/shared-pre-commit-hooks/master/scripts/setup-config.sh | bash -s ansible"
        ]
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Local tools (must be installed in your environment)
  - repo: local
    hooks:
      # ==================== SECURITY HOOKS ====================
      - id: gitleaks
        name: gitleaks
        description: Detects and prevents secrets like passwords, API keys, and tokens from being committed to the repository
        entry: gitleaks
        language: system
        args: ["detect", "--source", ".", "--verbose"]
        pass_filenames: false
        always_run: true

      - id: ripsecrets
        name: ripsecrets
        description: Fast and accurate secret scanner that finds credentials and sensitive information in code
        entry: ripsecrets
        language: system
        pass_filenames: false
        always_run: true

      # ==================== ANSIBLE HOOKS ====================
      - id: ansible-lint
        name: ansible-lint
        description: Checks Ansible playbooks for best practices and behavior that could be improved
        entry: ansible-lint
        language: system
        args: [-c, .config/ansible-lint.yml, -q]
        files: \.(yaml|yml)$
        exclude: ^(\.github/.*|molecule/.*|roles/.*|collections/.*|todo/.*|ansible/.*|\.ansible/.*|tests/.*|requirements\.yml$|\.pre-commit-*.*\.yaml$|\.travis\.yml$)

      # YAML linting
      - id: yamllint
        name: yamllint
        description: Validates YAML files for syntax errors and enforces consistent formatting and style
        entry: yamllint
        language: system
        args: [-c, .config/yamllint.yml]
        files: \.(yaml|yml)$
        exclude: ^(\.github/.*|molecule/.*|roles/.*|collections/.*|todo/.*|ansible/.*|\.ansible/.*|tests/.*|requirements\.yml$|\.pre-commit-*.*\.yaml$|\.travis\.yml$)
      
      # ==================== PYTHON HOOKS ====================
      - id: flake8
        name: flake8
        description: Checks Python code for style guide enforcement, programming errors, and code complexity
        entry: flake8
        language: system
        args: [--config, .config/flake8.conf]
        files: \.py$
      
      - id: black
        name: black
        description: Automatically formats Python code to ensure consistent style and readability
        entry: black
        language: system
        args: [--config, .config/pyproject.toml]
        files: \.py$

      - id: isort
        name: isort
        description: Sorts and organizes Python imports automatically according to PEP 8 guidelines
        entry: isort
        language: system
        types: [python]
        args: [--profile, black]

      # ==================== DOCKER HOOKS ====================
      - id: hadolint
        name: hadolint
        description: Lints Dockerfiles to follow best practices and avoid common pitfalls in container builds
        entry: hadolint
        language: system
        types: [dockerfile]
        args: [--ignore, DL3008, --ignore, DL3009, --ignore, DL3015, --ignore, DL3033]

      # ==================== SHELL HOOKS ====================
      - id: shellcheck
        name: shellcheck
        description: Finds bugs and potential issues in shell scripts and suggests improvements
        entry: shellcheck
        language: system
        types: [shell]

  # General file formatting and validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    exclude: ^(\.github/.*|roles/.*|collections/.*|todo/.*|ansible/.*|\.ansible/.*|tests/.*|requirements\.yml$|\.pre-commit-*.*\.yaml$|\.travis\.yml$)
    hooks:
      - id: trailing-whitespace
        name: trailing-whitespace
        description: Removes trailing whitespace from the end of lines
        exclude: ^(\.pre-commit-config.*\.yaml$|\.pre-commit-hooks\.yaml$)
      - id: end-of-file-fixer
        name: end-of-file-fixer
        description: Ensures files end with a single newline character
      - id: check-added-large-files
        name: check-added-large-files
        description: Prevents accidentally committing large files (over 500KB by default)
        args: ["--maxkb=500"]
      - id: check-case-conflict
        name: check-case-conflict
        description: Checks for files that would conflict in case-insensitive filesystems
      - id: check-merge-conflict
        name: check-merge-conflict
        description: Checks for files containing merge conflict strings
      - id: check-executables-have-shebangs
        name: check-executables-have-shebangs
        description: Ensures executable files have proper shebang lines
      - id: check-shebang-scripts-are-executable
        name: check-shebang-scripts-are-executable
        description: Ensures files with shebangs are marked as executable
      - id: mixed-line-ending
        name: mixed-line-ending
        description: Replaces mixed line endings with Unix-style (LF) line endings
        args: ["--fix=lf"]
